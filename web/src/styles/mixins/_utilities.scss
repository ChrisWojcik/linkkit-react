// Utilities

// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content/
// See: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/
@mixin sr-only {
  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  clip: rect(0, 0, 0, 0);
  clip-path: inset(50%);
  white-space: nowrap;
}

@mixin sr-only-reset {
  position: static;
  overflow: visible;
  width: auto;
  height: auto;
  clip: auto;
  clip-path: none;
  white-space: normal;
}

// Use in conjunction with .sr-only to only display content when it's focused.
//
// Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
//
// Credit: HTML5 Boilerplate
@mixin sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    overflow: visible;
    width: auto;
    height: auto;
    clip: auto;
    clip-path: none;
    white-space: normal;
  }
}

// CSS image replacement
@mixin text-hide() {
  border: 0;
  background-color: transparent;
  color: transparent;
  // stylelint-disable-next-line font-family-no-missing-generic-family-keyword
  font: 0/0 a;
  text-shadow: none;
}

// Text truncate
// Requires inline-block or block for proper styling
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Ensure long words wrap
@mixin overflow-wrap() {
  hyphens: auto;
  overflow-wrap: break-word;
  word-wrap: break-word;
}

// Clearfix
@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: '';
  }
}

// Has rich text
// Include on an element where rich rich text is being output
// Removes margin-top from the first child and margin-bottom from
// the last child so that the spacing can be controlled by the parent element
@mixin has-rich-text() {
  p {
    margin-top: 0;
  }

  > *:first-child {
    margin-top: 0;
  }

  > *:last-child {
    margin-bottom: 0;
  }
}
